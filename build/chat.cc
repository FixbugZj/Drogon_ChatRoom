//this file is generated by program(drogon_ctl) automatically,don't modify it!
#include "chat.h"
#include <drogon/utils/OStringStream.h>
#include <string>
#include <map>
#include <vector>
#include <set>
#include <iostream>
#include <unordered_map>
#include <unordered_set>
#include <algorithm>
#include <list>
#include <deque>
#include <queue>
using namespace drogon;
std::string chat::genText(const DrTemplateData& chat_view_data)
{
	drogon::OStringStream chat_tmp_stream;
	std::string layoutName{""};
	chat_tmp_stream << "<!DOCTYPE html>\n";
	chat_tmp_stream << "<html lang=\"zh-CN\">\n";
	chat_tmp_stream << "<head>\n";
	chat_tmp_stream << "    <meta charset=\"UTF-8\">\n";
	chat_tmp_stream << "    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n";
	chat_tmp_stream << "    <title>chatpage</title>\n";
	chat_tmp_stream << "    <style>\n";
	chat_tmp_stream << "        body {\n";
	chat_tmp_stream << "            font-family: Arial, sans-serif;\n";
	chat_tmp_stream << "            margin: 0;\n";
	chat_tmp_stream << "            padding: 0;\n";
	chat_tmp_stream << "            background-color: #f0f0f0;\n";
	chat_tmp_stream << "            overflow: hidden;\n";
	chat_tmp_stream << "        }\n";
	chat_tmp_stream << "        .container {\n";
	chat_tmp_stream << "            display: flex;\n";
	chat_tmp_stream << "            height: 100vh;\n";
	chat_tmp_stream << "        }\n";
	chat_tmp_stream << "        .sidebar {\n";
	chat_tmp_stream << "            width: 300px;\n";
	chat_tmp_stream << "            background-color: #ededed;\n";
	chat_tmp_stream << "            padding: 20px;\n";
	chat_tmp_stream << "            box-sizing: border-box;\n";
	chat_tmp_stream << "        }\n";
	chat_tmp_stream << "        .chat-area {\n";
	chat_tmp_stream << "            flex: 1;\n";
	chat_tmp_stream << "            background-color: #fff;\n";
	chat_tmp_stream << "            overflow-y: scroll;\n";
	chat_tmp_stream << "            padding: 20px;\n";
	chat_tmp_stream << "            box-sizing: border-box;\n";
	chat_tmp_stream << "        }\n";
	chat_tmp_stream << "        .chat-box {\n";
	chat_tmp_stream << "            max-height: 500px; /* 固定聊天框高度 */\n";
	chat_tmp_stream << "            overflow-y: auto;\n";
	chat_tmp_stream << "        }\n";
	chat_tmp_stream << "        .group {\n";
	chat_tmp_stream << "            margin-bottom: 20px;\n";
	chat_tmp_stream << "        }\n";
	chat_tmp_stream << "        .group h2 {\n";
	chat_tmp_stream << "            margin-bottom: 10px;\n";
	chat_tmp_stream << "            cursor: pointer; /* 添加指针以指示可点击 */\n";
	chat_tmp_stream << "        }\n";
	chat_tmp_stream << "        .group ul {\n";
	chat_tmp_stream << "            list-style: none;\n";
	chat_tmp_stream << "            padding: 0;\n";
	chat_tmp_stream << "            margin: 0;\n";
	chat_tmp_stream << "            display: none; /* 默认隐藏 */\n";
	chat_tmp_stream << "        }\n";
	chat_tmp_stream << "        .group ul.active {\n";
	chat_tmp_stream << "            display: block; /* 当活动时显示 */\n";
	chat_tmp_stream << "        }\n";
	chat_tmp_stream << "        .group ul li {\n";
	chat_tmp_stream << "            padding: 5px 0;\n";
	chat_tmp_stream << "            border-bottom: 1px solid #ccc;\n";
	chat_tmp_stream << "            cursor: pointer;\n";
	chat_tmp_stream << "        }\n";
	chat_tmp_stream << "        .group ul li:last-child {\n";
	chat_tmp_stream << "            border-bottom: none;\n";
	chat_tmp_stream << "        }\n";
	chat_tmp_stream << "        .message {\n";
	chat_tmp_stream << "            margin-bottom: 10px;\n";
	chat_tmp_stream << "            padding: 10px;\n";
	chat_tmp_stream << "            border-radius: 5px;\n";
	chat_tmp_stream << "        }\n";
	chat_tmp_stream << "        .message.sent {\n";
	chat_tmp_stream << "            background-color: #DCF8C6;\n";
	chat_tmp_stream << "            align-self: flex-end;\n";
	chat_tmp_stream << "        }\n";
	chat_tmp_stream << "        .message.received {\n";
	chat_tmp_stream << "            background-color: #E0E0E0;\n";
	chat_tmp_stream << "            align-self: flex-start;\n";
	chat_tmp_stream << "        }\n";
	chat_tmp_stream << "        .message-content {\n";
	chat_tmp_stream << "            word-wrap: break-word;\n";
	chat_tmp_stream << "        }\n";
	chat_tmp_stream << "        .input-box {\n";
	chat_tmp_stream << "            display: flex;\n";
	chat_tmp_stream << "            align-items: center;\n";
	chat_tmp_stream << "            padding: 10px;\n";
	chat_tmp_stream << "            background-color: #f5f5f5;\n";
	chat_tmp_stream << "            position: sticky;\n";
	chat_tmp_stream << "            bottom: 0;\n";
	chat_tmp_stream << "            z-index: 1;\n";
	chat_tmp_stream << "        }\n";
	chat_tmp_stream << "        .input-box input[type=\"text\"] {\n";
	chat_tmp_stream << "            flex: 1;\n";
	chat_tmp_stream << "            padding: 10px;\n";
	chat_tmp_stream << "            border: 1px solid #ccc;\n";
	chat_tmp_stream << "            border-radius: 5px;\n";
	chat_tmp_stream << "            margin-right: 10px;\n";
	chat_tmp_stream << "            font-size: 16px;\n";
	chat_tmp_stream << "        }\n";
	chat_tmp_stream << "        .input-box button {\n";
	chat_tmp_stream << "            padding: 10px 20px;\n";
	chat_tmp_stream << "            background-color: #4CAF50;\n";
	chat_tmp_stream << "            color: #fff;\n";
	chat_tmp_stream << "            border: none;\n";
	chat_tmp_stream << "            border-radius: 5px;\n";
	chat_tmp_stream << "            cursor: pointer;\n";
	chat_tmp_stream << "            font-size: 16px;\n";
	chat_tmp_stream << "            transition: background-color 0.3s;\n";
	chat_tmp_stream << "        }\n";
	chat_tmp_stream << "        .input-box button:hover {\n";
	chat_tmp_stream << "            background-color: #45A049;\n";
	chat_tmp_stream << "        }\n";
	chat_tmp_stream << "        .search-box {\n";
	chat_tmp_stream << "            padding: 20px;\n";
	chat_tmp_stream << "            background-color: #ededed;\n";
	chat_tmp_stream << "            box-sizing: border-box;\n";
	chat_tmp_stream << "        }\n";
	chat_tmp_stream << "        .search-box input[type=\"text\"] {\n";
	chat_tmp_stream << "            width: calc(100% - 60px);\n";
	chat_tmp_stream << "            padding: 10px;\n";
	chat_tmp_stream << "            border: 1px solid #ccc;\n";
	chat_tmp_stream << "            border-radius: 5px;\n";
	chat_tmp_stream << "            font-size: 16px;\n";
	chat_tmp_stream << "        }\n";
	chat_tmp_stream << "        .search-box button {\n";
	chat_tmp_stream << "            padding: 10px 20px;\n";
	chat_tmp_stream << "            background-color: #4CAF50;\n";
	chat_tmp_stream << "            color: #fff;\n";
	chat_tmp_stream << "            border: none;\n";
	chat_tmp_stream << "            border-radius: 5px;\n";
	chat_tmp_stream << "            cursor: pointer;\n";
	chat_tmp_stream << "            font-size: 16px;\n";
	chat_tmp_stream << "            transition: background-color 0.3s;\n";
	chat_tmp_stream << "        }\n";
	chat_tmp_stream << "        .search-box button:hover {\n";
	chat_tmp_stream << "            background-color: #45A049;\n";
	chat_tmp_stream << "        }\n";
	chat_tmp_stream << "    </style>\n";
	chat_tmp_stream << "</head>\n";
	chat_tmp_stream << "<body>\n";
	chat_tmp_stream << " ";
    auto nickname = chat_view_data.get<std::string>("nickname");
    if(nickname.empty()){
    
	chat_tmp_stream << "    ";
 } else { 
	chat_tmp_stream << "    <h1>欢迎您，";
{
    auto & val=chat_view_data["nickname"];
    if(val.type()==typeid(const char *)){
        chat_tmp_stream<<*(std::any_cast<const char *>(&val));
    }else if(val.type()==typeid(std::string)||val.type()==typeid(const std::string)){
        chat_tmp_stream<<*(std::any_cast<const std::string>(&val));
    }
}
	chat_tmp_stream << "</h1>\n";
	chat_tmp_stream << "    ";
 } 
chat_tmp_stream<<"\n";
	chat_tmp_stream << "    <div class=\"container\">\n";
	chat_tmp_stream << "        <div class=\"sidebar\">\n";
	chat_tmp_stream << "            <div class=\"search-box\">\n";
	chat_tmp_stream << "                <input type=\"text\" placeholder=\"搜索好友或群组...\">\n";
	chat_tmp_stream << "                <button>搜索</button>\n";
	chat_tmp_stream << "            </div>\n";
	chat_tmp_stream << "            <div class=\"group\">\n";
	chat_tmp_stream << "                <h2 onclick=\"toggleGroup('contacts')\">联系人</h2>\n";
	chat_tmp_stream << "                <ul id=\"contacts\" class=\"active\">\n";
	chat_tmp_stream << "                    <li>好友1</li>\n";
	chat_tmp_stream << "                    <li>好友2</li>\n";
	chat_tmp_stream << "                    <li>好友3</li>\n";
	chat_tmp_stream << "                    <li>好友4</li>\n";
	chat_tmp_stream << "                    <li>好友5</li>\n";
	chat_tmp_stream << "                    <!-- 可以根据需要添加更多好友 -->\n";
	chat_tmp_stream << "                </ul>\n";
	chat_tmp_stream << "            </div>\n";
	chat_tmp_stream << "            <div class=\"group\">\n";
	chat_tmp_stream << "                <h2 onclick=\"toggleGroup('groups')\">群组</h2>\n";
	chat_tmp_stream << "                <ul id=\"groups\">\n";
	chat_tmp_stream << "                    <li>群组1</li>\n";
	chat_tmp_stream << "                    <li>群组2</li>\n";
	chat_tmp_stream << "                    <li>群组3</li>\n";
	chat_tmp_stream << "                    <!-- 可以根据需要添加更多群组 -->\n";
	chat_tmp_stream << "                </ul>\n";
	chat_tmp_stream << "            </div>\n";
	chat_tmp_stream << "        </div>\n";
	chat_tmp_stream << "        <div class=\"chat-area\">\n";
	chat_tmp_stream << "            <div class=\"chat-box\" id=\"chatBox\">\n";
	chat_tmp_stream << "                <!-- 聊天消息将动态加载到此处 -->\n";
	chat_tmp_stream << "            </div>\n";
	chat_tmp_stream << "            <div class=\"input-box\">\n";
	chat_tmp_stream << "                <input type=\"text\" id=\"messageInput\" placeholder=\"输入消息...\">\n";
	chat_tmp_stream << "                <button class=\"sendButten\" onclick=\"sendMessage()\">发送</button>\n";
	chat_tmp_stream << "            </div>\n";
	chat_tmp_stream << "        </div>\n";
	chat_tmp_stream << "    </div>\n";
chat_tmp_stream<<"\n";
	chat_tmp_stream << "    <script>\n";
	chat_tmp_stream << "    function sendMessage(){\n";
	chat_tmp_stream << "        const messageValue = document.getElementById('messageInput').value\n";
	chat_tmp_stream << "        const socket = new WebSocket(\"ws://192.168.205.134:8000/chat\");\n";
	chat_tmp_stream << "        socket.onopen = ()=>{\n";
	chat_tmp_stream << "             console.log(\"WebSocket opened\");\n";
	chat_tmp_stream << "        };\n";
	chat_tmp_stream << "      \n";
chat_tmp_stream<<"\n";
	chat_tmp_stream << "         socket.onclose = function(event) {\n";
	chat_tmp_stream << "            console.log(\"WebSocket closed\");\n";
	chat_tmp_stream << "        };\n";
chat_tmp_stream<<"\n";
	chat_tmp_stream << "        socket.onerror = function(event) {\n";
	chat_tmp_stream << "            console.error(\"WebSocket error:\", event);\n";
	chat_tmp_stream << "        };\n";
	chat_tmp_stream << "        socket.send(messageValue);\n";
	chat_tmp_stream << "       document.getElementById('messageInput').value = ''\n";
	chat_tmp_stream << "    }\n";
	chat_tmp_stream << "        /* const socket = new WebSocket(\"ws://192.168.205.134:8000/chat\");\n";
	chat_tmp_stream << "       \n";
	chat_tmp_stream << "        socket.onopen = function(event) {\n";
	chat_tmp_stream << "            console.log(\"WebSocket opened\");\n";
	chat_tmp_stream << "            \n";
	chat_tmp_stream << "        };\n";
chat_tmp_stream<<"\n";
	chat_tmp_stream << "        socket.onmessage = function(event) {\n";
	chat_tmp_stream << "            const messagesDiv = document.getElementById(\"messages\");\n";
	chat_tmp_stream << "            const message = document.createElement(\"div\");\n";
	chat_tmp_stream << "            message.textContent = event.data;\n";
	chat_tmp_stream << "            messagesDiv.appendChild(message);\n";
	chat_tmp_stream << "            messagesDiv.scrollTop = messagesDiv.scrollHeight;\n";
	chat_tmp_stream << "        };\n";
chat_tmp_stream<<"\n";
	chat_tmp_stream << "        socket.onclose = function(event) {\n";
	chat_tmp_stream << "            console.log(\"WebSocket closed\");\n";
	chat_tmp_stream << "        };\n";
chat_tmp_stream<<"\n";
	chat_tmp_stream << "        socket.onerror = function(event) {\n";
	chat_tmp_stream << "            console.error(\"WebSocket error:\", event);\n";
	chat_tmp_stream << "        };\n";
chat_tmp_stream<<"\n";
	chat_tmp_stream << "        document.getElementById(\"input\").addEventListener(\"keypress\", function(event) {\n";
	chat_tmp_stream << "            if (event.key === \"Enter\") {\n";
	chat_tmp_stream << "                const input = document.getElementById(\"input\");\n";
	chat_tmp_stream << "                const message = input.value;\n";
	chat_tmp_stream << "                socket.send(message);\n";
	chat_tmp_stream << "                input.value = \"\";\n";
	chat_tmp_stream << "            } */\n";
	chat_tmp_stream << "      \n";
chat_tmp_stream<<"\n";
chat_tmp_stream<<"\n";
	chat_tmp_stream << "    </script>\n";
	chat_tmp_stream << "</body>\n";
chat_tmp_stream<<"\n";
	chat_tmp_stream << "</html>\n";
if(layoutName.empty())
{
std::string ret{std::move(chat_tmp_stream.str())};
return ret;
}else
{
auto templ = DrTemplateBase::newTemplate(layoutName);
if(!templ) return "";
HttpViewData data = chat_view_data;
auto str = std::move(chat_tmp_stream.str());
if(!str.empty() && str[str.length()-1] == '\n') str.resize(str.length()-1);
data[""] = std::move(str);
return templ->genText(data);
}
}
