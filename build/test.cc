//this file is generated by program(drogon_ctl) automatically,don't modify it!
#include "test.h"
#include <drogon/utils/OStringStream.h>
#include <string>
#include <map>
#include <vector>
#include <set>
#include <iostream>
#include <unordered_map>
#include <unordered_set>
#include <algorithm>
#include <list>
#include <deque>
#include <queue>
using namespace drogon;
std::string test::genText(const DrTemplateData& test_view_data)
{
	drogon::OStringStream test_tmp_stream;
	std::string layoutName{""};
	test_tmp_stream << "<!DOCTYPE html>\n";
	test_tmp_stream << "<html>\n";
	test_tmp_stream << "<head>\n";
	test_tmp_stream << "    <title></title>\n";
	test_tmp_stream << "    <meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8\">\n";
	test_tmp_stream << "    <style>\n";
	test_tmp_stream << "        p {\n";
	test_tmp_stream << "            text-align: left;\n";
	test_tmp_stream << "            padding-left: 20px;\n";
	test_tmp_stream << "        }\n";
	test_tmp_stream << "    </style>\n";
	test_tmp_stream << "</head>\n";
	test_tmp_stream << "<body>\n";
	test_tmp_stream << "<div style=\"width: 800px;height: 600px;margin: 30px auto;text-align: center\">\n";
	test_tmp_stream << "    <h1>www.5lmh.comy演示聊天室</h1>\n";
	test_tmp_stream << "    <div style=\"width: 800px;border: 1px solid gray;height: 300px;\">\n";
	test_tmp_stream << "        <div style=\"width: 200px;height: 300px;float: left;text-align: left;\">\n";
	test_tmp_stream << "            <p><span>当前在线:</span><span id=\"user_num\">0</span></p>\n";
	test_tmp_stream << "            <div id=\"user_list\" style=\"overflow: auto;\">\n";
	test_tmp_stream << "            </div>\n";
	test_tmp_stream << "        </div>\n";
	test_tmp_stream << "        <div id=\"msg_list\" style=\"width: 598px;border:  1px solid gray; height: 300px;overflow: scroll;float: left;\">\n";
	test_tmp_stream << "        </div>\n";
	test_tmp_stream << "    </div>\n";
	test_tmp_stream << "    <br>\n";
	test_tmp_stream << "    <textarea id=\"msg_box\" rows=\"6\" cols=\"50\" onkeydown=\"confirm(event)\"></textarea><br>\n";
	test_tmp_stream << "    <input type=\"button\" value=\"发送\" onclick=\"send()\">\n";
	test_tmp_stream << "</div>\n";
	test_tmp_stream << "</body>\n";
	test_tmp_stream << "</html>\n";
	test_tmp_stream << "<script type=\"text/javascript\">\n";
	test_tmp_stream << "    var uname = prompt('请输入用户名', 'user' + uuid(8, 16));\n";
	test_tmp_stream << "    var ws = new WebSocket(\"ws://192.168.205.134:8000/chat\");\n";
	test_tmp_stream << "    ws.onopen = function () {\n";
	test_tmp_stream << "        var data = \"系统消息：建立连接成功\";\n";
	test_tmp_stream << "        listMsg(data);\n";
	test_tmp_stream << "    };\n";
	test_tmp_stream << "    ws.onmessage = function (e) {\n";
	test_tmp_stream << "        var msg = JSON.parse(e.data);\n";
	test_tmp_stream << "        var sender, user_name, name_list, change_type;\n";
	test_tmp_stream << "        switch (msg.type) {\n";
	test_tmp_stream << "            case 'system':\n";
	test_tmp_stream << "                sender = '系统消息: ';\n";
	test_tmp_stream << "                break;\n";
	test_tmp_stream << "            case 'user':\n";
	test_tmp_stream << "                sender = msg.from + ': ';\n";
	test_tmp_stream << "                break;\n";
	test_tmp_stream << "            case 'handshake':\n";
	test_tmp_stream << "                var user_info = {'type': 'login', 'content': uname};\n";
	test_tmp_stream << "                sendMsg(user_info);\n";
	test_tmp_stream << "                return;\n";
	test_tmp_stream << "            case 'login':\n";
	test_tmp_stream << "            case 'logout':\n";
	test_tmp_stream << "                user_name = msg.content;\n";
	test_tmp_stream << "                name_list = msg.user_list;\n";
	test_tmp_stream << "                change_type = msg.type;\n";
	test_tmp_stream << "                dealUser(user_name, change_type, name_list);\n";
	test_tmp_stream << "                return;\n";
	test_tmp_stream << "        }\n";
	test_tmp_stream << "        var data = sender + msg.content;\n";
	test_tmp_stream << "        listMsg(data);\n";
	test_tmp_stream << "    };\n";
	test_tmp_stream << "    ws.onerror = function () {\n";
	test_tmp_stream << "        var data = \"系统消息 : 出错了,请退出重试.\";\n";
	test_tmp_stream << "        listMsg(data);\n";
	test_tmp_stream << "    };\n";
	test_tmp_stream << "    function confirm(event) {\n";
	test_tmp_stream << "        var key_num = event.keyCode;\n";
	test_tmp_stream << "        if (13 == key_num) {\n";
	test_tmp_stream << "            send();\n";
	test_tmp_stream << "        } else {\n";
	test_tmp_stream << "            return false;\n";
	test_tmp_stream << "        }\n";
	test_tmp_stream << "    }\n";
	test_tmp_stream << "    function send() {\n";
	test_tmp_stream << "        var msg_box = document.getElementById(\"msg_box\");\n";
	test_tmp_stream << "        var content = msg_box.value;\n";
	test_tmp_stream << "        var reg = new RegExp(\"\\r\\n\", \"g\");\n";
	test_tmp_stream << "        content = content.replace(reg, \"\");\n";
	test_tmp_stream << "        var msg = {'content': content.trim(), 'type': 'user'};\n";
	test_tmp_stream << "        sendMsg(msg);\n";
	test_tmp_stream << "        msg_box.value = '';\n";
	test_tmp_stream << "    }\n";
	test_tmp_stream << "    function listMsg(data) {\n";
	test_tmp_stream << "        var msg_list = document.getElementById(\"msg_list\");\n";
	test_tmp_stream << "        var msg = document.createElement(\"p\");\n";
	test_tmp_stream << "        msg.innerHTML = data;\n";
	test_tmp_stream << "        msg_list.appendChild(msg);\n";
	test_tmp_stream << "        msg_list.scrollTop = msg_list.scrollHeight;\n";
	test_tmp_stream << "    }\n";
	test_tmp_stream << "    function dealUser(user_name, type, name_list) {\n";
	test_tmp_stream << "        var user_list = document.getElementById(\"user_list\");\n";
	test_tmp_stream << "        var user_num = document.getElementById(\"user_num\");\n";
	test_tmp_stream << "        while(user_list.hasChildNodes()) {\n";
	test_tmp_stream << "            user_list.removeChild(user_list.firstChild);\n";
	test_tmp_stream << "        }\n";
	test_tmp_stream << "        for (var index in name_list) {\n";
	test_tmp_stream << "            var user = document.createElement(\"p\");\n";
	test_tmp_stream << "            user.innerHTML = name_list[index];\n";
	test_tmp_stream << "            user_list.appendChild(user);\n";
	test_tmp_stream << "        }\n";
	test_tmp_stream << "        user_num.innerHTML = name_list.length;\n";
	test_tmp_stream << "        user_list.scrollTop = user_list.scrollHeight;\n";
	test_tmp_stream << "        var change = type == 'login' ? '上线' : '下线';\n";
	test_tmp_stream << "        var data = '系统消息: ' + user_name + ' 已' + change;\n";
	test_tmp_stream << "        listMsg(data);\n";
	test_tmp_stream << "    }\n";
	test_tmp_stream << "    function sendMsg(msg) {\n";
	test_tmp_stream << "        var data = JSON.stringify(msg);\n";
	test_tmp_stream << "        ws.send(data);\n";
	test_tmp_stream << "    }\n";
	test_tmp_stream << "    function uuid(len, radix) {\n";
	test_tmp_stream << "        var chars = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'.split('');\n";
	test_tmp_stream << "        var uuid = [], i;\n";
	test_tmp_stream << "        radix = radix || chars.length;\n";
	test_tmp_stream << "        if (len) {\n";
	test_tmp_stream << "            for (i = 0; i < len; i++) uuid[i] = chars[0 | Math.random() * radix];\n";
	test_tmp_stream << "        } else {\n";
	test_tmp_stream << "            var r;\n";
	test_tmp_stream << "            uuid[8] = uuid[13] = uuid[18] = uuid[23] = '-';\n";
	test_tmp_stream << "            uuid[14] = '4';\n";
	test_tmp_stream << "            for (i = 0; i < 36; i++) {\n";
	test_tmp_stream << "                if (!uuid[i]) {\n";
	test_tmp_stream << "                    r = 0 | Math.random() * 16;\n";
	test_tmp_stream << "                    uuid[i] = chars[(i == 19) ? (r & 0x3) | 0x8 : r];\n";
	test_tmp_stream << "                }\n";
	test_tmp_stream << "            }\n";
	test_tmp_stream << "        }\n";
	test_tmp_stream << "        return uuid.join('');\n";
	test_tmp_stream << "    }\n";
	test_tmp_stream << "</script>\n";
if(layoutName.empty())
{
std::string ret{std::move(test_tmp_stream.str())};
return ret;
}else
{
auto templ = DrTemplateBase::newTemplate(layoutName);
if(!templ) return "";
HttpViewData data = test_view_data;
auto str = std::move(test_tmp_stream.str());
if(!str.empty() && str[str.length()-1] == '\n') str.resize(str.length()-1);
data[""] = std::move(str);
return templ->genText(data);
}
}
